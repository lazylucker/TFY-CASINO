from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from database import session, User
from quests import characters, assign_quest

async def start(update, context):
    user_id = update.effective_user.id
    user = session.query(User).filter_by(telegram_id=user_id).first()
    
    if not user:
        keyboard = [[InlineKeyboardButton(name, callback_data=name)] for name in characters.keys()]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:", reply_markup=reply_markup)
    else:
        await update.message.reply_text("–¢—ã —É–∂–µ –≤—ã–±—Ä–∞–ª –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!")

async def select_character(update, context):
    query = update.callback_query
    user_id = query.from_user.id
    character = query.data

    user = User(telegram_id=user_id, character=character)
    session.add(user)
    session.commit()

    await query.answer(f"–¢—ã –≤—ã–±—Ä–∞–ª {character}!")
    await query.message.reply_text(f"–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –∫–≤–µ—Å—Ç—ã!")

async def quest(update, context):
    user_id = update.effective_user.id
    user = session.query(User).filter_by(telegram_id=user_id).first()

    if user:
        quest_name = assign_quest(user)
        await update.message.reply_text(f"–¢–≤–æ–π –∫–≤–µ—Å—Ç: {quest_name}")
    else:
        await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —á–µ—Ä–µ–∑ /start")
async def casino(update, context):
    user_id = update.effective_user.id
    user = session.query(User).filter_by(telegram_id=user_id).first()

    if not user or not user.has_access_to_casino:
        await update.message.reply_text("–ö–∞–∑–∏–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–≤–µ—Å—Ç–æ–≤!")
        return

    result = spin_slot()
    win = check_win(result)

    message = f"üé∞ {result[0]} | {result[1]} | {result[2]} üé∞\n"
    message += "üéâ –¢—ã –≤—ã–∏–≥—Ä–∞–ª!" if win else "üò¢ –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞."

    await update.message.reply_text(message)
async def casino(update, context):
    user_id = update.effective_user.id
    user = session.query(User).filter_by(telegram_id=user_id).first()

    if not user or not user.has_access_to_casino:
        await update.message.reply_text("–ö–∞–∑–∏–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–≤–µ—Å—Ç–æ–≤!")
        return

    result, bonus_multiplier = spin_slot_with_bonus(user)
    win = check_win(result)

    message = f"üé∞ {result[0]} | {result[1]} | {result[2]}... "

    if win:
        winnings = user.balance * bonus_multiplier
        user.balance += winnings
        session.commit()
        message += f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {winnings} –º–æ–Ω–µ—Ç!"
    else:
        message += "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!"

    await update.message.reply_text(message)
